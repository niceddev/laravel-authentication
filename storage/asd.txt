

Next example is about ISP. For example we have OrderInterface with a lot of methods like theeese:

interface OrderInterface
{
    public function orderStatus(): enum;
    public function orderSend();
    public function orderAbort();
    public function orderRefund();
    public function orderCashback(): float;
    public function orderCashbackAbort();
}

It is good if our project is very small like my dick â™¥, but if our project will expand to a big one,
we should segregate it into multiple small Interfaces like theese.

interface OrderStatus
{
    public function status(): enum;
}

interface OrderTransaction
{
    public function orderSend();
    public function orderAbort();
    public function orderRefund();
}

interface OrderCashback
{
    public function orderCashback(): float;
    public function orderCashbackAbort();
}

It is good practice, cuz segregation or splitting one big interface into multiple small, will be more convenient and safer in the future of project.
